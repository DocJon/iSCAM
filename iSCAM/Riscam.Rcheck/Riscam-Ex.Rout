
R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Riscam"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Riscam')
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("A")
> ### * A
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: A
> ### Title: Pacific hake results
> ### Aliases: A
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(A)
> ## maybe str(A) ; plot(A) ...
> 
> 
> 
> cleanEx()
> nameEx("read.admb")
> ### * read.admb
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.admb
> ### Title: Data input
> ### Aliases: read.admb read.fit read.rep read.psv
> ### Keywords: ADMB iscam
> 
> ### ** Examples
> 
> ##---- Should be DIRECTLY executable !! ----
> ##-- ==>  Define data, use random,
> ##--	or do  help(data=index)  for the standard data sets.
> 
> ## The function is currently defined as
> function(ifile)
+ {	
+ 	ret=read.fit(ifile)
+ 	
+ 	fn=paste(ifile,'.rep', sep='')
+ 	A=read.rep(fn)
+ 	A$fit=ret
+ 	
+ 	pfn=paste(ifile,'.psv',sep='')
+ 	if(file.exists(pfn))
+ 		A$mc=read.psv(pfn)
+ 	
+ 	return(A)
+ }
function (ifile) 
{
    ret = read.fit(ifile)
    fn = paste(ifile, ".rep", sep = "")
    A = read.rep(fn)
    A$fit = ret
    pfn = paste(ifile, ".psv", sep = "")
    if (file.exists(pfn)) 
        A$mc = read.psv(pfn)
    return(A)
}
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.074 0.003 0.077 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
